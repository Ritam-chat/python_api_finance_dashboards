openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9

servers:
  - url: https://29abb700-c779-4e23-b304-81fce79e18df-dev.e1-us-east-azure.choreoapis.dev/default/fiance-endpoint/v1.0
    description: Optional server description, e.g. Main (production) server
  - url: http://localhost:8080
    description: Optional server description, e.g. Internal staging server for testing

paths:
  /add-record:
      summary: 'Adds a record to firebase for a certain user.'
      post:
        summary: 'A post request for adding a record to firebase.'
        description: ''
        operationId: add-record
        parameters:
          - name: user
            in: header
            description: 'Provide the user name, the records needs to be added to'
            required: true
            schema:
              type: string
        requestBody:
          description: 'Add an existent data in the store'
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/sms'
        responses:
          '400':
            description: 'Invalid username supplied'
          '404':
            description: 'User not found'
          '200':
            description: 'Successfully added the response.'

  /records:
    get:
      summary: 'Returns a list of records for the given user.'
      parameters:
        - name : user
          in: header
          description: 'Provide the user name, the records needs to be added to'
          required: true
          schema:
            type: string

        - name: username
          in: query
          description: 'Provide the login creds, username'
          required: false
          schema:
            type: string

        - name: password
          in: query
          description: 'Provide the login creds, password'
          required: false
          schema:
            type: string

      responses:
        "200": # status code
          description: 'All the records of the user.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions'

  /update-records:
      summary: 'updates a record to firebase for a certain user.'
      post:
        summary: 'A post request for updating some record to firebase.'
        description: ''
        operationId: update-record
        parameters:
          - name: user
            in: header
            description: 'Provide the user name, the records needs to be added to'
            required: true
            schema:
              type: string
        requestBody:
          description: 'Update some existing records in the store'
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/transaction-array'
        responses:
          '400':
            description: 'Invalid username supplied'
          '404':
            description: 'User not found'
          '200':
            description: 'Successfully updates the records.'

  /wake-up:
    get:
      summary: Returns a status.
      description: Returns the status.
      responses:
        "200": # status code
          description: 'Successfully woke up.'
        "500" : # status code
          description : 'Error'



components:
  schemas:
    sms:
      type: object
      properties:
        body:
          type: string
          example: 'This is a sample message'
        address:
          type: string
          example: 'HDFC-BANK'
        readable-date:
          type: string
          format: date-time

    transaction-array:
      type: array
      items:
        type : object
        additionalProperties:
          $ref: '#/components/schemas/transaction'

    transaction:
      type: object
      properties:
        to_from:
          type : string
          description : 'The transaction made to / from'
        tags:
          type: array
          description: 'Tags for the translation'
          items:
            type : string
        type:
          type: string
          description: 'Type of the transaction'
        time:
          type: string
          description: 'Tags for the translation'
        gps:
          type: string
          description: 'Place of the translation'
        account:
          type : string
          description: 'Account of the translation'
        mode:
          type : string
          description: 'Mode for the translation'
        accountType:
          type : string
          description: 'Account type of the translation'
        amount:
          type: string
          description: 'Amount for the translation'
        refNo:
          type : string
          description: 'RefNo of the translation'

    bank-info:
      type: object
      additionalProperties:
          type : object
          additionalProperties:
              type : object
              additionalProperties:
                $ref: '#/components/schemas/transaction'

    transactions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/bank-info'


